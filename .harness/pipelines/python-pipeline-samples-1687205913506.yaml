pipeline:
  identifier: Build_python_pipeline_samples_1687205921202
  name: Build python-pipeline-samples
  orgIdentifier: default
  projectIdentifier: testFactory
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1686067279169
        repoName: spahuja-harness/python-pipeline-samples
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    image: plugins/docker
                    settings:
                      dry_run: "true"
                      repo: hello/world
                      tags: latest
                    connectorRef: account.harnessImage
                  timeout: ""
                  type: Plugin
              - step:
                  type: Run
                  name: create Docker file
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      FROM python:3.10.6-alpine
                      WORKDIR /python-pipeline-samples
                      ADD . /python-pipeline-samples
                      RUN pip install -r requirements.txt
                      CMD ["python" , "app.py"]
                      EOM
                      cat pythondockerfile
                    connectorRef: account.harnessImage
                    image: alpine
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: account.harnessImage
                    repo: spahuja/pythonsample
                    tags:
                      - latest
                    dockerfile: pythondockerfile
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          sharedPaths:
            - /shared
        type: CI
    - stage:
        name: Integration test
        identifier: Integration_test
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Background
                  name: python server
                  identifier: python_server
                  spec:
                    connectorRef: account.harnessImage
                    image: python-pipeline-samples
                    shell: Sh
                    command: |
                      python3 /python-pipeline-samples/app.py
                  description: server connection
              - step:
                  type: Run
                  name: test connection to server
                  identifier: test_connection_to_server
                  spec:
                    connectorRef: account.harnessImage
                    image: curlimages/curl:7.73.0
                    shell: Sh
                    command: |-
                      sleep 20
                      curl localhost:5000
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: MarkAsSuccess
                  strategy:
                    parallelism: 2
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: account.harnessImage
                    repo: pyImage
                    tags:
                      - latest
